@use "../abstracts/variables" as vars;
@use "../abstracts/mixins" as mixins;

// Padding Utilities
// Default (no breakpoint)
// Example: Use `.p-xs` to apply extra small padding to all sides.
@each $direction, $property in (p: padding, pl: padding-left, pr: padding-right, pt: padding-top, pb: padding-bottom) {
	@each $size, $value in vars.$spacings-map {
		.#{$direction}-#{$size} {
			#{$property}: $value;
		}
	}
	// Add a `none` version for each padding direction
	.#{$direction}-none {
		#{$property}: 0;
	}
}

// Example usage:
// `.p-sm` - Applies small padding (defined by `$spacing-sm`) to all sides.
// `.pr-lg` - Applies large padding (defined by `$spacing-lg`) to the right side.
// `.p-none` - Removes padding on all sides.

// Responsive Padding Utilities
@each $bp in map-keys(vars.$breakpoints-map) {
	@include mixins.respond-to($bp) {
		@each $direction, $property in (p: padding, pl: padding-left, pr: padding-right, pt: padding-top, pb: padding-bottom) {
			@each $size, $value in vars.$spacings-map {
				.#{$direction}-#{$size}-#{$bp} {
					#{$property}: $value;
				}
			}
			// Add a `none` version for each breakpoint
			.#{$direction}-none-#{$bp} {
				#{$property}: 0;
			}
		}
	}
}

// Example usage:
// `.p-md-sm` - Applies medium padding (defined by `$spacing-md`) on small screens (breakpoint `sm`).
// `.pt-lg-xl` - Applies large top padding (defined by `$spacing-lg`) on extra-large screens (breakpoint `xl`).
// `.p-none-md` - Removes all padding on medium screens (breakpoint `md`).
// `.pl-none-lg` - Removes left padding on large screens (breakpoint `lg`).
